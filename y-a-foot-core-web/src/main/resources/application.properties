server.port=8280
server.address=127.0.0.1
server.servlet.context-path=/api
server.error.include-message=always

# Spring Boot configuration
spring.application.name=y-a-foot-core
spring.profiles.active=${spring.profile}

# Spring messages (i18n)
spring.messages.fallback-to-system-locale=false

# Security
spring.security.user.name=${security.api.username}
spring.security.user.password=${security.api.password}

# JDBC
spring.datasource.url=${jdbc.url}
spring.datasource.username=${jdbc.username}
spring.datasource.password=${jdbc.password}
spring.datasource.driver-class-name=org.postgresql.Driver

#Â Flyway
spring.flyway.enabled=true
spring.flyway.url=${jdbc.url}
spring.flyway.user=${jdbc.username}
spring.flyway.password=${jdbc.password}
spring.flyway.schemas=yafoot

# MyBatis
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:**/dao/*.xml

# Mailing
spring.mail.host=${mail.host}
spring.mail.port=${mail.port}
spring.mail.username=${mail.username}
spring.mail.password=${mail.password}
spring.mail.properties.mail.smtp.auth=${mail.smtp.auth}
spring.mail.properties.mail.smtp.starttls.enable=${mail.smtp.starttls.enable}
spring.mail.properties.mail.smtp.starttls.required=${mail.smtp.starttls.required}

# Templates
spring.freemarker.enabled=true
spring.freemarker.content-type=text/plain

# Application config
app.security.jwt.token.secret=${security.jwt.token.secret}
app.security.jwt.token.active.minutes=60
app.mail.sender.name=Footeroo
app.mail.sender.address=${mail.sender.address}
app.web.public.url=${web.app.public.url}
app.web.public.match-management.url=${app.web.public.url}/match/{0}
app.web.public.carpooling-management.url=${app.web.public.url}/match/{0}/carpooling
app.web.public.password-reset.url=http

# REST services
api.config.public.url=${rest.api.public.url}/api
api.config.rest.logging.include.headers=${rest.logging.include.headers}
api.config.rest.logging.include.query=${rest.logging.include.query}
api.config.rest.logging.include.payload=${rest.logging.include.payload}
api.config.rest.logging.max-payload-length=${rest.logging.max.payload.length}

# REST API
api.matches.root.path=/matches
api.matches.one.path=${api.matches.root.path}/{0}
api.matches.one.registrations.root.path=${api.matches.root.path}/{0}/registrations
api.matches.one.registrations.one.path=${api.matches.one.registrations.root.path}/{1}
api.players.root.path=/players
api.players.one.path=${api.players.root.path}/{0}
api.sites.root.path=/sites
api.sites.one.path=${api.sites.root.path}/{0}
api.cars.root.path=/cars

# Remote APIs
api.users.server.url=${rest.api.users.url}
api.users.client.username=${rest.api.users.username}
api.users.client.password=${rest.api.users.password}
